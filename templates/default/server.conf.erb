input {
  <% if node['logstash']['server']['inputs'].empty? -%>
  udp {
    charset => "UTF-8" # string, one of ["ASCII-8BIT", "UTF-8", "US-ASCII", "Big5", "Big5-HKSCS", "Big5-UAO", "CP949", "Emacs-Mule"$
    debug => true # boolean (optional), default: false
    format => "json" # string, one of ["plain", "json", "json_event", "msgpack_event"] (optional)
    message_format => "%{message}"
    type => "foobar" # string (required)
  }
  <% else -%> 
    <%= LogstashConf.section_to_str(node['logstash']['server']['inputs']) %>
  <% end -%>
}

<% unless node['logstash']['server']['filters'].empty? -%>
filter {
  <%= LogstashConf.section_to_str(node['logstash']['server']['filters'], node['logstash']['server']['version'], @patterns_dir) %>
}
<% end -%>

output {
  <% if node['logstash']['server']['debug'] -%>
  stdout { debug => true debug_format => "json" }
  <% end -%>
  <% if @enable_embedded_es -%>
  elasticsearch { embedded => true }
  <% elsif not @es_server_ip.empty? -%>
  elasticsearch { host => "<%= @es_server_ip %>" cluster => "<%= @es_cluster %>" }
  <% end -%>
  <% unless @graphite_server_ip.empty? -%>
  graphite { host => "<%= @graphite_server_ip %>" metrics => ["logstash.events", "1"] }
  <% end -%>
  <% # unless node['logstash']['server']['outputs'].empty? -%>
    <%= LogstashConf.section_to_str(node['logstash']['server']['outputs']) %>
  <% # end -%>
  elasticsearch { host => "127.0.0.1" cluster => "logstash_vagrant" }

}
